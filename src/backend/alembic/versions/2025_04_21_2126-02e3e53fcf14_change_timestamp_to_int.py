"""Change timestamp to int

Revision ID: 02e3e53fcf14
Revises: 18c0feb3dae4
Create Date: 2025-04-21 21:26:29.830349

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "02e3e53fcf14"
down_revision: Union[str, None] = "18c0feb3dae4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "access_tokens",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.Integer(),
        postgresql_using="EXTRACT(EPOCH FROM created_at)::integer",
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "access_tokens",
        "created_at",
        existing_type=sa.Integer(),
        type_=postgresql.TIMESTAMP(),
        postgresql_using="to_timestamp(created_at)",
        existing_nullable=False,
    )
    # ### end Alembic commands ###
