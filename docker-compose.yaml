services:
  app:
    build:
      dockerfile: docker_build/app/Dockerfile
      context: ./
    depends_on:
      pg:
        condition: service_healthy
    environment:
      DB_URL: ${APP_CONFIG__DB__DB_URL}
    ports:
      - ${APP_CONFIG__RUN__PORT}:8000
    volumes:
      - ./app:/app
    develop:
      watch:
        - action: sync+restart
          path: ./app
          target: /app
        - action: rebuild
          path: poetry.lock

  pg:
    image: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 3s
      retries: 3

  adminer:
    image: adminer
    ports:
      - "${ADMIN_PORT}:8080"
  redis:
    image: redis:latest
    ports:
      - "6379:6379"

volumes:
  pgdata:

