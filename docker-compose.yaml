services:
  backend:
    build:
      dockerfile: docker_build/backend/Dockerfile
      context: ./
    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DB_URL: ${APP_CONFIG__DB__DB_URL}
    ports:
      - ${APP_CONFIG__RUN__PORT}:8000
    volumes:
      - ./src/backend:/backend
    networks:
      - app-net

  frontend:
    build:
      dockerfile: docker_build/frontend/Dockerfile
      context: ./
    volumes:
      - ./src/frontend:/frontend
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - app-net

  pg:
    image: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - app-net

  migrations:
    build:
      context: ./
      dockerfile: docker_build/migrations/Dockerfile
    depends_on:
      pg:
        condition: service_healthy
    restart: "no"
    env_file:
      - src/backend/.env
    networks:
      - app-net
    volumes:
      - ./src/backend:/backend

  adminer:
    image: adminer
    ports:
      - "${ADMIN_PORT}:8080"
    networks:
      - app-net

  redis:
    image: redis:latest
    ports:
      - "${APP_CONFIG_REDIS_PORT}:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - app-net

  celery:
    build:
      context: ./
      dockerfile: docker_build/backend/Dockerfile
    command: celery -A core.celery.celery_worker.celery_app worker --loglevel=info --pool=solo
    depends_on:
      - redis
      - backend
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - APP_CONFIG__DB__DB_URL=${APP_CONFIG__DB__DB_URL}
    networks:
      - app-net
    volumes:
      - ./src/backend:/backend

  celery-beat:
    build:
      context: ./
      dockerfile: docker_build/backend/Dockerfile
    command: celery -A core.celery.celery_worker.celery_app beat --loglevel=info
    depends_on:
      - redis
      - backend
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - APP_CONFIG__DB__DB_URL=${APP_CONFIG__DB__DB_URL}
    networks:
      - app-net
    volumes:
      - ./src/backend:/backend

  flower:
    build:
      context: ./
      dockerfile: docker_build/backend/Dockerfile
    command: python -m flower --broker=redis://redis:6379/0 --port=5555
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    networks:
      - app-net
    volumes:
      - ./src/backend:/backend

volumes:
  pgdata:

networks:
  app-net: