"""Add account to DB

Revision ID: d770849c18e4
Revises: 6819d3364a53
Create Date: 2025-04-12 00:54:42.259572

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d770849c18e4"
down_revision: Union[str, None] = "6819d3364a53"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "accounts",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("role", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user_profiles.user_id"],
            name=op.f("fk_accounts_user_id_user_profiles"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_accounts")),
    )
    op.create_index(op.f("ix_accounts_id"), "accounts", ["id"], unique=False)
    op.create_table(
        "account_group_association_table",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.id"],
            name=op.f(
                "fk_account_group_association_table_account_id_accounts"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.id"],
            name=op.f("fk_account_group_association_table_group_id_groups"),
        ),
        sa.PrimaryKeyConstraint(
            "id", name=op.f("pk_account_group_association_table")
        ),
        sa.UniqueConstraint(
            "account_id", "group_id", name="idx_account_group"
        ),
    )
    op.drop_table("user_group_association_table")
    op.add_column(
        "assignments",
        sa.Column("admin_account_id", sa.Integer(), nullable=False),
    )
    op.drop_constraint(
        "fk_assignments_admin_id_user_profiles",
        "assignments",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_assignments_admin_account_id_accounts"),
        "assignments",
        "accounts",
        ["admin_account_id"],
        ["id"],
    )
    op.drop_column("assignments", "admin_id")
    op.alter_column(
        "groups",
        "title",
        existing_type=sa.VARCHAR(length=64),
        type_=sa.String(length=63),
        existing_nullable=False,
    )
    op.drop_constraint(
        "fk_groups_admin_id_user_profiles", "groups", type_="foreignkey"
    )
    op.drop_column("groups", "admin_id")
    op.add_column(
        "tasks", sa.Column("account_id", sa.Integer(), nullable=False)
    )
    op.drop_constraint(
        "fk_tasks_user_id_user_profiles", "tasks", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_tasks_account_id_accounts"),
        "tasks",
        "accounts",
        ["account_id"],
        ["id"],
    )
    op.drop_column("tasks", "user_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "tasks",
        sa.Column(
            "user_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(
        op.f("fk_tasks_account_id_accounts"), "tasks", type_="foreignkey"
    )
    op.create_foreign_key(
        "fk_tasks_user_id_user_profiles",
        "tasks",
        "user_profiles",
        ["user_id"],
        ["user_id"],
    )
    op.drop_column("tasks", "account_id")
    op.add_column(
        "groups",
        sa.Column(
            "admin_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.create_foreign_key(
        "fk_groups_admin_id_user_profiles",
        "groups",
        "user_profiles",
        ["admin_id"],
        ["user_id"],
    )
    op.alter_column(
        "groups",
        "title",
        existing_type=sa.String(length=63),
        type_=sa.VARCHAR(length=64),
        existing_nullable=False,
    )
    op.add_column(
        "assignments",
        sa.Column(
            "admin_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(
        op.f("fk_assignments_admin_account_id_accounts"),
        "assignments",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_assignments_admin_id_user_profiles",
        "assignments",
        "user_profiles",
        ["admin_id"],
        ["user_id"],
    )
    op.drop_column("assignments", "admin_account_id")
    op.create_table(
        "user_group_association_table",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "user_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "group_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.id"],
            name="fk_user_group_association_table_group_id_groups",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user_profiles.user_id"],
            name="fk_user_group_association_table_user_id_user_profiles",
        ),
        sa.PrimaryKeyConstraint("id", name="pk_user_group_association_table"),
        sa.UniqueConstraint("user_id", "group_id", name="idx_user_group"),
    )
    op.drop_table("account_group_association_table")
    op.drop_index(op.f("ix_accounts_id"), table_name="accounts")
    op.drop_table("accounts")
    # ### end Alembic commands ###
